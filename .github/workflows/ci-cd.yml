name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  PYTHON_VERSION: '3.12'

jobs:
        
  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      if: github.event_name == 'release'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name == 'release' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-docker]
    if: github.event_name == 'release'
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "üöÄ Deployment step would go here"
        echo "This could include:"
        echo "- Updating a Kubernetes deployment"
        echo "- Notifying a webhook"
        echo "- Updating a VPS via SSH"
        echo "- Deploying to a cloud service"
        
  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [build-docker, deploy]
    if: always()
    
    steps:
    - name: Notify Discord (Success)
      if: success()
      run: |
        echo "‚úÖ All jobs completed successfully"
        # Add Discord webhook notification here if desired
        
    - name: Notify Discord (Failure)
      if: failure()
      run: |
        echo "‚ùå Pipeline failed"
        # Add Discord webhook notification here if desired
